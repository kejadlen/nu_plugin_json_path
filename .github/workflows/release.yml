on:
  push:
    tags:
      - v*
  workflow_dispatch:

name: create-release

jobs:

  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload-url }}
    steps:
      - name: Create release
        id: create-release
        run: |
          UPLOAD_URL="$(
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository }}/releases \
              -d '{"tag_name":"v6","target_commitish":"${{ github.sha }}","name":"${{ github.sha }}","body":"# ${{ github.sha }}","draft":true,"prerelease":false,"generate_release_notes":false}' \
            | jq --raw-output .upload_url)"
          echo "upload-url=$UPLOAD_URL" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    needs: create-release

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable

      - name: Build project
        run: cargo build --release

      - name: Upload build
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: application/octet-stream" \
            "${UPLOAD_URL/'{?name,label}'/?name=nu_plugin_json_path.${{ matrix.os }}}" \
            --data-binary "@target/release/nu_plugin_json_path"
        env:
          UPLOAD_URL: ${{ needs.create-release.outputs.upload-url }}
